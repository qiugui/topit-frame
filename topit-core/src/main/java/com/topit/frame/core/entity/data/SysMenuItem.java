package com.topit.frame.core.entity.data;import java.util.Date;import javax.persistence.Column;import javax.persistence.Entity;import javax.persistence.Id;import javax.persistence.Table;import javax.persistence.Version;import com.fasterxml.jackson.annotation.JsonIgnoreProperties;/** *  * @ClassName: SysMenuItem * @Description: 系统菜单设置选项 * @author gaodachuan * @date 2014年12月1日 下午4:00:54 * */@JsonIgnoreProperties(value = { "hibernateLazyInitializer", "handler",		"fieldHandler" })@Entity@Table(name = "sys_menu_item")public class SysMenuItem implements java.io.Serializable {	/**	 * @Fields serialVersionUID	 */	private static final long serialVersionUID = 1L;	// field	/** 菜单节点编号。 **/	private int id;	/**	 * 菜单号	 */	@Column(name = "MenuId")	private int menuId=1;	public int getMenuId() {		return menuId;	}	public void setMenuId(int menuId) {		this.menuId = menuId;	}	/** 菜单项显示名称。 **/	private String name;	/** 菜单项的第一个父节点。 **/	private int parentId;	/** 菜单项的第一个左孩子节点编号。 **/	private int leftchildid = -1;	/** 菜单项的下一个兄弟节点编号。 **/	private int nextbrotherid = -1;	/** 菜单项模块号。如果为null表示不指向任何模块（适用于菜单文件夹或分隔项）。 **/	private int moduleid = -1;	/** 菜单项附件参数，预留用。 **/	private String tagparams;	/** 快捷键。 **/	private String shortcutkey;	/** 菜单项的提示信息。 **/	private String tip;	/** 图标文件。 **/	private String iconfile;	/** 创建人。 **/	private int creator;	/** 创建时间。 **/	private Date createtime = new Date(System.currentTimeMillis());	/** 最后修改人。 **/	private int lasteditor;	/** 最后修改时间。 **/	private Date lastedittime = new Date(System.currentTimeMillis());	/** 数据记录版本号。 **/	private int version;	public String state = "open";	@Column(name = "state")	public String getState() {		return state;	}	public void setState(String state) {		this.state = state;	}	public SysMenuItem() {	}	public SysMenuItem(SysModule sysModule) {		this.moduleid = sysModule.getId();		this.name = sysModule.getName();		this.tip = sysModule.getDescription();		this.createtime = new Date(System.currentTimeMillis());		this.lastedittime = new Date(System.currentTimeMillis());    		//设置默认的图标		this.iconfile="large-picture.png";			}	// method	@Id	@Column(name = "Id", length = 11, columnDefinition = "INT")	public int getId() {		return id;	}	public void setId(int id) {		this.id = id;	}	@Column(name = "Name", length = 50, columnDefinition = "VARCHAR")	public String getName() {		return name;	}	public void setName(String name) {		this.name = name;	}	@Column(name = "ParentId", length = 11, columnDefinition = "INT")	public int getParentId() {		return parentId;	}	public void setParentId(int parentId) {		this.parentId = parentId;	}	@Column(name = "LeftChildId", length = 11, columnDefinition = "INT")	public int getLeftchildid() {		return leftchildid;	}	public void setLeftchildid(int leftchildid) {		this.leftchildid = leftchildid;	}	@Column(name = "NextBrotherId", length = 11, columnDefinition = "INT")	public int getNextbrotherid() {		return nextbrotherid;	}	public void setNextbrotherid(int nextbrotherid) {		this.nextbrotherid = nextbrotherid;	}	@Column(name = "ModuleId", length = 11, columnDefinition = "INT")	public int getModuleid() {		return moduleid;	}	public void setModuleid(int moduleid) {		this.moduleid = moduleid;	}	@Column(name = "TagParams", length = 50, columnDefinition = "VARCHAR")	public String getTagparams() {		return tagparams;	}	public void setTagparams(String tagparams) {		this.tagparams = tagparams;	}	@Column(name = "ShortCutKey", length = 50, columnDefinition = "VARCHAR")	public String getShortcutkey() {		return shortcutkey;	}	public void setShortcutkey(String shortcutkey) {		this.shortcutkey = shortcutkey;	}	@Column(name = "Tip", length = 100, columnDefinition = "VARCHAR")	public String getTip() {		return tip;	}	public void setTip(String tip) {		this.tip = tip;	}	@Column(name = "IconFile", length = 50, columnDefinition = "VARCHAR")	public String getIconfile() {		return iconfile;	}	public void setIconfile(String iconfile) {		this.iconfile = iconfile;	}	@Column(name = "Creator", length = 11, columnDefinition = "INT")	public int getCreator() {		return creator;	}	public void setCreator(int creator) {		this.creator = creator;	}	@Column(name = "CreateTime", length = 19, columnDefinition = "DATETIME")	public Date getCreatetime() {		return createtime;	}	public void setCreatetime(Date createtime) {		this.createtime = createtime;	}	@Column(name = "LastEditor", length = 11, columnDefinition = "INT")	public int getLasteditor() {		return lasteditor;	}	public void setLasteditor(int lasteditor) {		this.lasteditor = lasteditor;	}	@Column(name = "LastEditTime", columnDefinition = "DATETIME")	public Date getLastedittime() {		return lastedittime;	}	public void setLastedittime(Date lastedittime) {		this.lastedittime = lastedittime;	}	@Version	@Column(name = "Version", length = 11, columnDefinition = "INT")	public int getVersion() {		return version;	}	public void setVersion(int version) {		this.version = version;	}	// override toString Method	public String toString() {		StringBuffer sb = new StringBuffer();		sb.append("{");		sb.append("'id':'" + this.getId() + "',");		sb.append("'name':'" + this.getName() + "',");		sb.append("'state':'" + this.getState() + "',");		sb.append("'parentId':'" + this.getParentId() + "',");		sb.append("'leftchildid':'" + this.getLeftchildid() + "',");		sb.append("'nextbrotherid':'" + this.getNextbrotherid() + "',");		sb.append("'moduleid':'" + this.getModuleid() + "',");		sb.append("'tagparams':'" + this.getTagparams() + "',");		sb.append("'shortcutkey':'" + this.getShortcutkey() + "',");		sb.append("'tip':'" + this.getTip() + "',");		sb.append("'iconfile':'" + this.getIconfile() + "',");		sb.append("'creator':'" + this.getCreator() + "',");		sb.append("'createtime':'" + this.getCreatetime() + "',");		sb.append("'lasteditor':'" + this.getLasteditor() + "',");		sb.append("'lastedittime':'" + this.getLastedittime() + "',");		sb.append("'version':'" + this.getVersion() + "'");		sb.append("}");		return sb.toString();	}}